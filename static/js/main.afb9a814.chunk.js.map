{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","services/pixabay-api.js","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["ImageGalleryItem","webformatURL","largeImageURL","onOpenModal","className","onClick","src","alt","Button","type","API_KEY","BASE_URL","api","fetchPhotos","searchName","page","perPage","fetch","then","response","ok","json","Promise","reject","Error","styles","marginLeft","marginRight","Status","ImageGallery","state","images","error","isLoader","status","handleLoadMoreClick","e","setState","reset","prevProps","prevState","searchQuery","this","props","PixabayAPI","res","hits","catch","window","scrollTo","top","document","documentElement","scrollHeight","behavior","message","length","map","id","style","color","width","height","textAlign","Component","Searchbar","handleSearchChange","value","currentTarget","toLowerCase","handleFormSubmit","preventDefault","trim","onSubmit","toast","autoComplete","autoFocus","placeholder","onChange","modalRoot","querySelector","Modal","handleKeyDownClick","code","onClose","handleBackdropClick","target","addEventListener","removeEventListener","createPortal","App","modalImageSrc","handleSubmit","toggleModal","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.afb9a814.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport const ImageGalleryItem = ({ webformatURL, largeImageURL, onOpenModal }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img onClick={() => onOpenModal(largeImageURL)} src={webformatURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n  </li>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired, \r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n}","export const Button = ({onClick}) => {\r\n  return (\r\n    <button onClick={onClick} type=\"button\" className=\"Button\">Load more</button>\r\n  )\r\n};\r\n\r\n","const API_KEY = '21948076-53f9c976759f5ce811ed96a6f';\r\nconst BASE_URL = 'https://pixabay.com/api/?image_type=photo&orientation=horizontal&';\r\n\r\nfunction fetchPhotos( searchName, page = 1, perPage = 12 )  {\r\n  return fetch(`${BASE_URL}q=${searchName}&page=${page}&key=${API_KEY}&per_page=${perPage}`)\r\n    .then((response) => {\r\n      if(response.ok) {\r\n        return response.json()\r\n      }\r\n      return Promise.reject(new Error(`Немає зображень за запитом: ${searchName}`))\r\n    })\r\n};\r\n\r\nconst api ={\r\n  fetchPhotos\r\n};\r\n\r\nexport default api;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n// import { toast } from 'react-toastify';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { ImageGalleryItem } from 'components/ImageGalleryItem';\r\nimport { Button } from 'components/Button';\r\n// import { Modal } from 'components/Modal';\r\nimport PixabayAPI from 'services/pixabay-api';\r\n\r\nconst styles = {\r\n  marginLeft: 'auto',\r\n  marginRight: 'auto', \r\n}\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n}\r\n\r\nexport class ImageGallery extends Component  {\r\n  state = {\r\n    images: [],\r\n    error: null,\r\n    isLoader: false,\r\n    page: 1,\r\n    status: 'idle',\r\n  };\r\n\r\n  componentDidUpdate( prevProps, prevState ) {\r\n    const { searchQuery } = this.props;\r\n    const { page } = this.state;\r\n    \r\n    if( prevProps.searchQuery !== searchQuery || prevState.page !== page) {\r\n      // this.setState({ status: Status.PENDING })\r\n      this.setState({isLoader: true})\r\n\r\n      if(prevProps.searchQuery !== searchQuery) {\r\n        PixabayAPI\r\n        .fetchPhotos(searchQuery)\r\n        .then(res => {          \r\n          this.setState({ images: res.hits, status: Status.RESOLVED, isLoader: false })\r\n        })\r\n        .catch(error => this.setState({ error, status: Status.REJECTED }))\r\n        return;\r\n      }\r\n\r\n      if(prevState.page !== page)  {\r\n        PixabayAPI\r\n        .fetchPhotos(searchQuery, page)\r\n        .then(res => {\r\n        this.setState(({images}) =>({ images: [...images, ...res.hits], status: Status.RESOLVED, isLoader: false }))\r\n        \r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n\r\n        })        \r\n        .catch(error => this.setState({ error, status: Status.REJECTED }))\r\n      }\r\n      \r\n    };\r\n\r\n  };\r\n\r\n  handleLoadMoreClick = (e) => {\r\n    this.setState(({page}) => ({page: page +1}))\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ images: [], page: 1,})\r\n  }\r\n\r\n  render() {\r\n    const { images, status, error, isLoader } = this.state;\r\n    // console.log(\"🚀 ~ GALLERY IMAGES\", images)\r\n    \r\n    if(status === 'idle') {return null};\r\n\r\n    if(status === 'rejected') {return <h1>{error.message}</h1>};\r\n    \r\n    if(status === 'resolved') {\r\n      return images.length !== 0 ? (\r\n        <>\r\n          <ul className=\"ImageGallery\">            \r\n            {images.map( ({ id, webformatURL, largeImageURL }) => (\r\n              <ImageGalleryItem \r\n                onOpenModal={this.props.onOpenModal} \r\n                key={id} \r\n                webformatURL={webformatURL} \r\n                largeImageURL={largeImageURL}/>\r\n            ))}         \r\n          </ul>\r\n          {isLoader && <Loader \r\n            style={styles}\r\n            type=\"ThreeDots\"\r\n            color=\"#3f51b5\"\r\n            width=\"60\"\r\n            height=\"60\" \r\n          />}\r\n          \r\n          {images.length % 12 === 0 && (\r\n            <Button onClick={this.handleLoadMoreClick} />\r\n          )}            \r\n        \r\n        </>\r\n          ): (            \r\n            <h2 style={{textAlign: 'center'}}>Sorry, nothing was found for your query...</h2>\r\n          )         \r\n    };\r\n  };\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  error: PropTypes.string,\r\n  isLoader: PropTypes.bool,\r\n  page: PropTypes.number,\r\n  status: PropTypes.string,\r\n};\r\n\r\n// if(status === 'pending') {\r\n//   return (\r\n//     <Loader \r\n//       style={{\r\n//         marginLeft: 'auto',\r\n//         marginRight: 'auto',\r\n//       }}\r\n//         color=\"#3f51b5\" \r\n//     />\r\n// )};","import { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Searchbar extends Component  {\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n\r\n  handleSearchChange = ({ currentTarget }) => {\r\n    const { value } = currentTarget;\r\n    \r\n    this.setState({ searchQuery: value.toLowerCase() });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    const { searchQuery } = this.state;\r\n    e.preventDefault();\r\n\r\n    if(searchQuery.trim() === '') {\r\n      toast.error(`Введіть текст`);\r\n      return;\r\n    }\r\n    this.props.onSubmit(searchQuery)\r\n    this.reset();\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({searchQuery: ''});\r\n  }\r\n\r\n  render() {\r\n    const {searchQuery} = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleFormSubmit}  className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n  \r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            value={searchQuery}\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleSearchChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  };\r\n  \r\n};\r\n\r\nSearchbar.propTypes = {\r\n  searchQuery: PropTypes.string\r\n};","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\n\r\nexport class Modal extends Component {\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDownClick)\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDownClick);\r\n  };\r\n\r\n  handleKeyDownClick = e => {\r\n    if(e.code === 'Escape') {\r\n      this.props.onClose('');\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if(e.currentTarget === e.target) {\r\n      this.props.onClose('');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={ this.props.src } alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot)\r\n  };\r\n    \r\n};\r\n\r\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Components //\nimport { ImageGallery } from 'components/ImageGallery';\nimport { Searchbar } from 'components/Searchbar';\nimport { Modal } from 'components/Modal';\nimport { ToastContainer, toast } from 'react-toastify';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    modalImageSrc: '',\n  };\n\n  handleSubmit = searchQuery => {\n    if(this.state.searchQuery === searchQuery) {\n      toast(`Search name '${searchQuery}' already used`)\n      return;\n    }\n    this.setState({searchQuery})\n  };\n\n  toggleModal = (src) => this.setState({  modalImageSrc: src });\n\n  render() {\n    const { searchQuery, modalImageSrc } = this.state;\n    return (\n      <div className=\"App\">\n        \n        {modalImageSrc && <Modal src={modalImageSrc} onClose={this.toggleModal}/>}\n        <ToastContainer autoClose={1500}/>\n        <Searchbar onSubmit={this.handleSubmit} />\n        <ImageGallery onOpenModal={this.toggleModal} searchQuery={searchQuery} />\n      </div>\n    );\n  };\n  \n};\n\nexport default App;\n\nApp.propTypes = {\n  searchQuery: PropTypes.string,\n  modalImageSrc: PropTypes.string,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}